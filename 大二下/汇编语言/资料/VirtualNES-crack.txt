
            How to Crack 13in1.nes ROM

	                        Black White
                           iceman@zju.edu.cn
			                  June 2, 2021


1. windows下的游戏分析工具: CheatEngine
   很容易分析出生命的地址=59AB29

2. 用OD调试VirtuaNES.exe
(1) 在59AB29处设一个硬件写入断点, 断在+470F38处:
00470F0F    mov     ax, [esi+0x10]; ax=ip=C2D0
00470F13    push    eax           ; eax=C2D0, 它是call 473C80的参数
00470F14    lea     ecx, [eax+0x1]; ecx=eax+1
00470F17    mov     [esi+0x10], cx; [esi+10]=C2D1, 即ip++
00470F1B    call    00473C80      ; 返回AL = 游戏机中C2D0指向的字节 = 51h
00470F20    mov     dl, [esi+0x12]; DL=3, 生命的初始值来自[esi+0x12]
00470F23    add     esp, 0x4
00470F26    movzx   ax, al
00470F2A    and     eax, 0xFF
00470F2F    add     ebp, 0x3
00470F32    mov     [eax+0x59AAD8], dl; 填入生命值 [59AB29] = 3
                                      ; 注意59AB29 == 59AAD8 + 51h
00470F38    jmp     0047376A
注意到+470F1B call 00473C80的参数是在+407F13处压入堆栈的, 其值为C2D0, 这个值
其实是游戏机的ip。当前ip保存在[esi+10]中。
如何找到C2D0指向的游戏代码并分析代码的含义? 通过阅读函数*473C80里面的代码可知:
①先把C2D0分解成高3位=110(二进制)、低13位=02D0;
②再找高3位110对应的段首地址=dword ptr [577A68+4*6]; 其中6就是110对应的十六进制值
③最后找ip指向的字节:OD数据窗ctrl+g输入[577A68+4*6]+02D0, 可以查到ip指向的字节为51h
  而ip-1即C2CF指向的字节则为85h, 根据这2个机器码(85h,51h)可以推断这是一条mov指令, 
  其意义是:
  byte ptr [59AAD8h + 51h] = byte ptr [esi + 12h]; 其中51h就是指令的末字节
④继续查看C2D1指向的游戏代码为: 85, 52
  可以推断这条指令的含义是: 
  byte ptr [59AAD8h + 52h] = byte ptr [esi + 12h]

(2) 继续游戏, 自己把老巢打掉结束游戏
(3) 在OD数据窗ctrl+g输入[577A68+4*6]+02CD查看游戏机C2CD处即步骤(1)游戏机ip-3处的指令:
    FD, EA
(4) 在FD这个字节设一个硬件访问断点, 再F9运行, 会断在+473CBE处, 此时检查esi+12发现
    [esi+12]还没有被赋值为3
(5) 删除步骤(4)所设硬件断点, 再对esi+12设硬件写入断点(在OD数据窗ctrl+g输入esi+12,
    再选中首字节设硬件断点), F9运行, 共发生5次中断(分号后面的值是中断时[esi+12]的值):
    +470BB0 ; 0
    +470BB0 ; 8
    +46FD09 ; 0
    +470BB0 ; 8
    +46FD09 ; 0
    +470B85 ; 3
    注意第5次断点发生时, 实际触发断点的是以下这条指令:
    +470B82 mov [esi+0x12], al; AL=3
    很显然, 这次赋值极有可能就是生命值的来源。
(6) 在OD数据窗ctrl+g输入[esi+10]查看当前ip为FD63, 计算ip高3位=111(二进制), 
    计算ip低13位=1D63, 再ctrl+g输入[577A68+4*7]+1D63可查到ip指向的指令: 60h
    可进一步查到ip-2处的指令为: A9, 03。可以推断ip-2处的指令极有可能是一条
    赋值指令, 它会把[esi+12]赋值为3。
(7) 继续游戏, 打掉老巢, 结束游戏
(8) 删除所有硬件断点, 再在OD数据窗ctrl+g输入[577A68+4*7]+1D61, 并对首字节A9
    设一个硬件访问断点, F9运行, 断在以下地址:
      +46EA19  mov     al, [eax+ecx]; AL=A9, 取指令
    F8跟踪到+46EA6C jmp [eax*4+0x473880]; 通过跳转表执行A9对应的指令
    F8跟踪进入, 看到以下代码:
      +470B6E    mov     ax, [esi+0x10]; AX=FD62
      +470B72    push    eax
      +470B73    lea     ecx, [eax+0x1]; ECX=FD63
      +470B76    mov     [esi+0x10], cx; ip=FD63
      +470B7A    call    00473C80      ; 返回FD62指向的字节, AL=03
      +470B7F    add     esp, 0x4
      +470B82    mov     [esi+0x12], al; [esi+12] = 3
      +470B85    jmp     00473719
    由此可见, 游戏机内地址FD61指向的指令A9 03确实把[esi+12]赋值为3, 这个3就是
    指令的操作数。
(9) 在OD数据窗ctrl+g输入[577A68+4*7]+1D61查游戏机地址FD61指向的机器码:
    A9 03 60 A5
(A) 关闭OD, 有QV打开13in1.nes, F7搜索A9 03 60 A5, 把03改成0A, 再Alt+F9保存, 
    重新运行VitualNes, 打开13in1.nes, 玩Tank 1990, 发现命已经改成10条。
